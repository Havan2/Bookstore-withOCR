{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kshit\\\\OneDrive\\\\Desktop\\\\Project\\\\Bookstore_with_OCR_Front_End\\\\Bookstore_with_OCR_Front_End\\\\react-frontend\\\\src\\\\components\\\\ListingDetailsPopup.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { BACKEND_ADDRESS } from \"./config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ListingDetailsPopup({\n  listing,\n  onClose\n}) {\n  _s();\n  const [userEmail, setUserEmail] = useState(null);\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Track user's login status\n\n  const fetchUserEmail = async () => {\n    try {\n      const response = await fetch(`${BACKEND_ADDRESS}/api/get_user_email/?username=${listing.username}`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n          // Add any necessary authentication headers if required\n        },\n        credentials: \"include\" // Include credentials in the request\n      });\n      const data = await response.json();\n      setUserEmail(data.email); // Assuming the response contains an email field\n    } catch (error) {\n      console.error(\"Error fetching user email:\", error);\n    }\n  };\n\n  // Function to check if user is logged in\n  const checkLoggedIn = () => {\n    setIsLoggedIn(true); // Set isLoggedIn to true if user is logged in\n  };\n\n  // Call the checkLoggedIn function when the component mounts to check the user's login status\n  useEffect(() => {\n    checkLoggedIn();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popup-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-button\",\n        onClick: onClose,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"popup-card-text\",\n        children: listing.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"popup-card-text\",\n      children: [\"by: \", listing.authors]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"popup-card-text\",\n      children: [\"listed by: \", listing.username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"popup-card-text\",\n      children: listing.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: listing.thumbnail,\n        alt: listing.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), isLoggedIn &&\n      /*#__PURE__*/\n      // Render the button only if user is logged in\n      _jsxDEV(\"button\", {\n        style: {\n          marginTop: \"10px\"\n        },\n        className: \"view-email-button\",\n        onClick: fetchUserEmail,\n        children: \"View Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), userEmail && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"popup-card-text\",\n      children: [\"User Email: \", userEmail]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(ListingDetailsPopup, \"PNRWfBNrCyNyvqJJvkvmTv5gdWs=\");\n_c = ListingDetailsPopup;\nexport default ListingDetailsPopup;\nvar _c;\n$RefreshReg$(_c, \"ListingDetailsPopup\");","map":{"version":3,"names":["React","useState","useEffect","BACKEND_ADDRESS","jsxDEV","_jsxDEV","ListingDetailsPopup","listing","onClose","_s","userEmail","setUserEmail","isLoggedIn","setIsLoggedIn","fetchUserEmail","response","fetch","username","method","headers","credentials","data","json","email","error","console","checkLoggedIn","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","title","authors","description","style","display","flexDirection","alignItems","src","thumbnail","alt","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/Kshit/OneDrive/Desktop/Project/Bookstore_with_OCR_Front_End/Bookstore_with_OCR_Front_End/react-frontend/src/components/ListingDetailsPopup.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { BACKEND_ADDRESS } from \"./config\";\r\n\r\nfunction ListingDetailsPopup({ listing, onClose }) {\r\n  const [userEmail, setUserEmail] = useState(null);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Track user's login status\r\n\r\n  const fetchUserEmail = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        `${BACKEND_ADDRESS}/api/get_user_email/?username=${listing.username}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            // Add any necessary authentication headers if required\r\n          },\r\n          credentials: \"include\", // Include credentials in the request\r\n        }\r\n      );\r\n      const data = await response.json();\r\n      setUserEmail(data.email); // Assuming the response contains an email field\r\n    } catch (error) {\r\n      console.error(\"Error fetching user email:\", error);\r\n    }\r\n  };\r\n\r\n  // Function to check if user is logged in\r\n  const checkLoggedIn = () => {\r\n    setIsLoggedIn(true); // Set isLoggedIn to true if user is logged in\r\n  };\r\n\r\n  // Call the checkLoggedIn function when the component mounts to check the user's login status\r\n  useEffect(() => {\r\n    checkLoggedIn();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"popup-card\">\r\n      <div className=\"popup-header\">\r\n        <button className=\"close-button\" onClick={onClose}>\r\n          &times;\r\n        </button>\r\n        <h2 className=\"popup-card-text\">{listing.title}</h2>\r\n      </div>\r\n      <p className=\"popup-card-text\">by: {listing.authors}</p>\r\n      <p className=\"popup-card-text\">listed by: {listing.username}</p>\r\n      <p className=\"popup-card-text\">{listing.description}</p>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <img src={listing.thumbnail} alt={listing.title} />\r\n        {isLoggedIn && ( // Render the button only if user is logged in\r\n          <button\r\n            style={{ marginTop: \"10px\" }}\r\n            className=\"view-email-button\"\r\n            onClick={fetchUserEmail}\r\n          >\r\n            View Email\r\n          </button>\r\n        )}\r\n      </div>\r\n      {userEmail && <p className=\"popup-card-text\">User Email: {userEmail}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ListingDetailsPopup;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}